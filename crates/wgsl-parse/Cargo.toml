[package]
name = "wgsl-parse"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
description = "Parse a wgsl source file to a syntax tree"
documentation = "https://docs.rs/wgsl-parse"
repository.workspace = true
license.workspace = true

[dependencies]
annotate-snippets = "0.12.4"
derive_more = { version = "2.0.1", features = [
  "as_ref",
  "constructor",
  "deref",
  "deref_mut",
  "from",
  "is_variant",
  "try_unwrap",
  "unwrap",
] }
itertools = "0.14.0"
lalrpop-util = "0.22.1"
lexical = { version = "7.0.4", features = ["format", "power-of-two"] }
logos = "0.15.0"
serde = { version = "1.0.215", features = ["derive", "rc"], optional = true }
thiserror = "2.0.12"
tokrepr = { workspace = true, optional = true }
wgsl-types = { workspace = true }

[build-dependencies]
lalrpop = { version = "0.22.1", default-features = false }

[features]
default = []
# allow attributes on most declarations and statements.
# reference: https://github.com/wgsl-tooling-wg/wesl-spec/blob/main/ConditionalTranslation.md#appendix-updated-grammar
attributes = []
# conditional translation attribute (@if).
# reference: https://github.com/wgsl-tooling-wg/wesl-spec/blob/main/ConditionalTranslation.md
condcomp = ["attributes"]
# reference: none yet
generics = ["attributes"]
# import declarations.
# reference: https://github.com/wgsl-tooling-wg/wesl-spec/blob/main/Imports.md
imports = []
# allow naga/wgpu extensions.
# They are not well-documented, the best I could find is this:
# * https://github.com/gfx-rs/wgpu/issues/4410
# * https://github.com/gfx-rs/wgpu/blob/trunk/docs/api-specs/ray_tracing.md
# * https://github.com/gfx-rs/wgpu/blob/b93b55920a978ef9f013efe8d75cb10e69488629/naga/src/valid/mod.rs#L83
naga_ext = ["push_constant", "wgsl-types/naga_ext"]
push_constant = []
serde = ["dep:serde", "wgsl-types/serde"]
# allow templates on function declarations
# reference: none yet
templates = []
tokrepr = ["dep:tokrepr", "wgsl-types/tokrepr"]
wesl = ["condcomp", "imports"]

[lints]
workspace = true
