fn all_constant_arguments() {
    let xvipaiai = vec2<i32>(42i, 43i);
    let xvupaiai = vec2<u32>(44u, 45u);
    let xvfpaiai = vec2<f32>(46f, 47f);
    let xvfpafaf = vec2<f32>(48f, 49f);
    let xvfpaiaf = vec2<f32>(48f, 49f);
    let xvupuai = vec2<u32>(42u, 43u);
    let xvupaiu = vec2<u32>(42u, 43u);
    let xvuuai = vec2<u32>(42u, 43u);
    let xvuaiu = vec2<u32>(42u, 43u);
    let xvip = vec2<i32>(0i, 0i);
    let xvup = vec2<u32>(0u, 0u);
    let xvfp = vec2<f32>(0f, 0f);
    let xmfp = mat2x2<f32>(vec2<f32>(0f, 0f), vec2<f32>(0f, 0f));
    let xmfpaiaiaiai = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(3f, 4f));
    let xmfpafaiaiai = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(3f, 4f));
    let xmfpaiafaiai = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(3f, 4f));
    let xmfpaiaiafai = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(3f, 4f));
    let xmfpaiaiaiaf = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(3f, 4f));
    let xmfp_faiaiai = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(3f, 4f));
    let xmfpai_faiai = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(3f, 4f));
    let xmfpaiai_fai = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(3f, 4f));
    let xmfpaiaiai_f = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(3f, 4f));
    let xvispai = vec2(1i);
    let xvfspaf = vec2(1f);
    let xvis_ai = vec2(1i);
    let xvus_ai = vec2(1u);
    let xvfs_ai = vec2(1f);
    let xvfs_af = vec2(1f);
    let xafafaf = array<f32, 2>(1f, 2f);
    let xaf_faf = array<f32, 2>(1f, 2f);
    let xafaf_f = array<f32, 2>(1f, 2f);
    let xafaiai = array<f32, 2>(1f, 2f);
    let xai_iai = array<i32, 2>(1i, 2i);
    let xaiai_i = array<i32, 2>(1i, 2i);
    let xaipaiai = array<i32, 2>(1i, 2i);
    let xafpaiai = array<f32, 2>(1f, 2f);
    let xafpaiaf = array<f32, 2>(1f, 2f);
    let xafpafai = array<f32, 2>(1f, 2f);
    let xafpafaf = array<f32, 2>(1f, 2f);
    let xavipai = array<vec3<i32>, 1>(vec3(1i));
    let xavfpai = array<vec3<f32>, 1>(vec3(1f));
    let xavfpaf = array<vec3<f32>, 1>(vec3(1f));
    let xvisai = vec2(1i);
    let xvusai = vec2(1u);
    let xvfsai = vec2(1f);
    let xvfsaf = vec2(1f);
    let iaipaiai = array<i32, 2>(1i, 2i);
    let iafpaiaf = array<f32, 2>(1f, 2f);
    let iafpafai = array<f32, 2>(1f, 2f);
    let iafpafaf = array<f32, 2>(1f, 2f);
    return;
}

fn mixed_constant_and_runtime_arguments() {
    var u: u32;
    var i: i32;
    var f: f32;

    let _e3 = u;
    let xvupuai_1 = vec2<u32>(_e3, 43u);
    let _e6 = u;
    let xvupaiu_1 = vec2<u32>(42u, _e6);
    let _e9 = f;
    let xvfpfai = vec2<f32>(_e9, 47f);
    let _e12 = f;
    let xvfpfaf = vec2<f32>(_e12, 49f);
    let _e15 = u;
    let xvuuai_1 = vec2<u32>(_e15, 43u);
    let _e18 = u;
    let xvuaiu_1 = vec2<u32>(42u, _e18);
    let _e21 = f;
    let xmfp_faiaiai_1 = mat2x2<f32>(vec2<f32>(_e21, 2f), vec2<f32>(3f, 4f));
    let _e28 = f;
    let xmfpai_faiai_1 = mat2x2<f32>(vec2<f32>(1f, _e28), vec2<f32>(3f, 4f));
    let _e35 = f;
    let xmfpaiai_fai_1 = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(_e35, 4f));
    let _e42 = f;
    let xmfpaiaiai_f_1 = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(3f, _e42));
    let _e49 = f;
    let xaf_faf_1 = array<f32, 2>(_e49, 2f);
    let _e52 = f;
    let xafaf_f_1 = array<f32, 2>(1f, _e52);
    let _e55 = f;
    let xaf_fai = array<f32, 2>(_e55, 2f);
    let _e58 = f;
    let xafai_f = array<f32, 2>(1f, _e58);
    let _e61 = i;
    let xai_iai_1 = array<i32, 2>(_e61, 2i);
    let _e64 = i;
    let xaiai_i_1 = array<i32, 2>(1i, _e64);
    let _e67 = f;
    let xafp_faf = array<f32, 2>(_e67, 2f);
    let _e70 = f;
    let xafpaf_f = array<f32, 2>(1f, _e70);
    let _e73 = f;
    let xafp_fai = array<f32, 2>(_e73, 2f);
    let _e76 = f;
    let xafpai_f = array<f32, 2>(1f, _e76);
    let _e79 = i;
    let xaip_iai = array<i32, 2>(_e79, 2i);
    let _e82 = i;
    let xaipai_i = array<i32, 2>(1i, _e82);
    let _e85 = i;
    let xvisi = vec2(_e85);
    let _e87 = u;
    let xvusu = vec2(_e87);
    let _e89 = f;
    let xvfsf = vec2(_e89);
    return;
}

